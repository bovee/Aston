import numpy as np
from aston.Datafile import Datafile
from aston.Math.PeakFinding import simple_peak_find, find_peaks
from aston.Math.Integrators import constant_bl_integrate, integrate_peaks

known_times = np.array([2.58166666666667, 2.985, 3.39666666666667, 4.17, 4.56333333333333, 4.95666666666667, 5.72666666666667, 6.13, 6.525, 7.30166666666667, 7.71166666666667, 8.12666666666667, 8.90333333333333, 9.31166666666667, 9.70833333333333, 10.4916666666667, 10.8966666666667, 11.3, 12.0866666666667, 12.4983333333333, 12.905, 13.6933333333333, 14.1, 14.5116666666667, 15.285, 15.6883333333333, 16.09, 16.8666666666667, 17.2883333333333, 17.6916666666667, 18.4516666666667, 18.855, 19.27, 20.0466666666667, 20.4433333333333, 20.84, 21.61, 22.0216666666667, 22.4433333333333, 23.2333333333333, 23.6266666666667, 24.0283333333333, 24.8216666666667, 25.2233333333333, 25.6333333333333, 26.4183333333333, 26.8316666666667, 27.2433333333333, 28.0166666666667, 28.4166666666667, 28.8133333333333, 29.5833333333333, 29.995, 30.3916666666667, 31.9483333333333, 32.7266666666667, 33.1366666666667, 33.5416666666667, 34.3216666666667, 34.7316666666667, 35.1333333333333, 35.91, 36.325, 36.735, 37.5216666666667, 37.93, 38.3416666666667, 39.1216666666667, 39.515, 39.9216666666667, 40.6883333333333, 41.1033333333333, 41.5116666666667, 42.295, 42.705, 43.1233333333333, 43.8683333333333, 44.28, 44.6766666666667, 45.4433333333333, 45.8433333333333, 46.255, 47.0316666666667, 47.4433333333333, 47.85, 48.6383333333333, 49.045, 49.4633333333333, 50.2466666666667, 50.6483333333333, 51.0516666666667, 51.825, 52.2183333333333, 52.6266666666667, 54.2183333333333, 54.9816666666667, 55.4016666666667, 55.81, 56.58, 57.3883333333333, 58.1583333333333, 58.5716666666667, 58.9516666666667, 59.7433333333333, 60.1466666666667, 60.565, 61.3383333333333, 61.7283333333333, 62.1316666666667, 62.9116666666667, 63.3066666666667, 63.7066666666667, 64.4633333333333, 64.8566666666667, 65.2633333333333, 66.03, 66.4416666666667, 66.8383333333333, 67.9983333333333, 68.4016666666667, 69.165, 69.565, 69.9666666666667, 70.725, 71.13, 71.54, 72.3033333333333, 72.7116666666667, 73.125, 73.8983333333333, 74.2966666666667, 74.6933333333333, 75.4733333333333, 75.8633333333333, 76.2716666666667, 77.02, 77.4233333333333, 77.8316666667])
known_d13cs = np.array([-21.2828787780376, -19.7882515155452, -20.2846526153979, -23.1572846410323, -21.3476233437256, -21.481962046419, -27.3135827271153, -29.0919554646228, -27.2712998397852, -26.0149432103577, -24.8013386377414, -28.2417510825323, -25.8483944531047, -27.0897842080194, -25.7771342556508, -22.9878003160994, -23.270178726076, -23.7115514635836, -23.4182288689703, -24.7376299688231, -23.9010140512687, -26.2936971291245, -23.4940812115701, -22.6824823114229, -24.6671143370572, -24.6214870745648, -24.2598541396034, -12.9504975101758, -12.8249326448428, -12.5233053823504, -11.8178920282324, -11.24626476574, -11.8586772105309, -10.9213205811033, -12.4896706287347, -10.0310206763662, -12.5386413570624, -11.5810424569152, -11.6854775915822, -13.006166341907, -12.6985050446003, -12.2758721096389, -14.5635722049017, -14.6049392699402, -13.870334697324, -13.9510064302416, -13.6484132025634, -12.4818143024162, -18.0774463280506, -16.0268077206201, -16.4491577682515, -16.4607784489478, -16.4091795488006, -16.315529596432, -18.2548276825149, -19.1014767255564, -18.6578721529402, -19.6172505629168, -16.3529052784273, -16.466300705811, -16.1196677708496, -14.742311141422, -15.0527235862129, -14.9881190135966, -15.7677964189833, -15.180186173898, -15.4775872737508, -15.0102419892613, -15.1975806919546, -14.9429647744003, -17.5005741101585, -17.3539865549493, -16.319376309864, -18.4140423703126, -16.9144377976964, -16.2068615874253, -16.659397181086, -15.3187982809388, -15.1831483285702, -17.9447576643284, -17.1691190568979, -17.7645201567507, -13.4201635273231, -12.9735646271759, -12.6819487096215, -14.5416317874773, -13.6750158699229, -13.2334396596519, -15.1061057201005, -14.898472785139, -14.5228455226466, -17.3234775482809, -16.3068162509743, -16.071206005889, -13.9456232138218, -14.2472212046419, -13.4366506668399, -14.2550404217546, -14.3606611024509, -15.045412249935, -17.2270329306313, -19.9924397029531, -16.6427330258942, -17.220427448688, -17.2918001861955, -17.4232239759245, -18.3278560015588, -17.6361833593141, -20.2465560968217, -21.2052108123322, -21.0845551874946, -20.8919165800641, -24.500491881008, -19.7728305837014, -21.8212146661471, -12.8848240019053, -12.661225101758, -12.5335751493895, -13.346523187841, -13.2358959253486, -13.0644939161687, -12.9058553087382, -12.9962223737767, -16.5848033471897, -16.2951817571664, -17.4335771845501, -10.9601751753702, -11.3655649302849, -11.8689717026067, -10.9116037282411, -10.9329594483416, -10.587309495973, -12.7049642114835, -12.2292915692388, -12.2576813241535, -20.2912282627522, -17.8016010002598, -20.9439907552])

dt = Datafile('./data/Acquisition-0000.dxf')
tss = dt.active_traces(all_tr=True)
args = (dt, True, False)
pf_opts = {'init_slope': 500, 'start_slope': 200, 'end_slope': 200, \
           'min_peak_height': 50, 'max_peak_width': 1.5}

for st_slope in [25, 50, 75, 100, 125]:
    pf_opts['start_slope'] = st_slope
    pts = find_peaks(tss, simple_peak_find, pf_opts, *args)
    pks = integrate_peaks(tss, pts, constant_bl_integrate, {}, *args)

    for pk in pks:
        if 1610 < pk.area(44) < 1650:
            pk.info['p-type'] = 'Isotope Standard'

    tot_off = []
    for pk in pks:
        tdiff = known_times - float(pk.info['p-s-time'])
        if tdiff.min() < 0.01:
            known_dv = known_d13cs[tdiff.argmin()]
            tot_off.append(float(pk.d13C()) - known_dv)

    print(st_slope, np.average(tot_off), np.std(tot_off))
